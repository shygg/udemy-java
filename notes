Lesson 1:
  Choose High resolution
    captions on
  learn to search
    or create a question
      you can add images and stuff, yay!
      self formating code
  where to find source code
  qa
  
Lesson 2:
  download and install the right version of the JDK and IntelliJ IDEA
    new versions are released very often!
    get the most recent.
    Java 10 doesnt have long term support, Java 11 will have long term support.
    for 32bit you need Java 8, recent versions do not support 32bit, thanks Oracle!
    The course will work with all versions of java, yay
  talks about the different upcoming videos, lesson 3 is about windows, and then linux or mac

Lesson 3:
  shows where to download the latest jdk 
  talks about how to find out what version (32 or 64 bit) of windows you are running.
  installation

Lesson 4:
  where to download intellij
  difference between community and pro
  intelliJ installation
    64bit version
    associate with java, groovy and .kt
    
    start intellij
    settings, default project structure, find sdk folder
    configure -> editor
      general
        auto import -> Addd unambigious imports on the fly
                      optimize imports on the fly
        code folding
          remove checkbox for closures,
          genereic constructors and method paramethers.

Lesson 5:
  free 90 days trial for intelliJ ultimate Edition
 
Lesson 6 - 11: Mac and linux versions of Lesson 3-5

Section 3:

Lesson 12: Introduction

Lesson 13: hello world

Lesson 14: interface

Lesson 16: variables
  variables are boxes of information, storage for data/information
  int, integer:
    whole number without a decimal point (.)
      "int myFirstNumber = 5;" declare, name, assign, number
      sout short for System.out.println()
      explains basic things like what happens if you write "myFirstNumber" in println()
      explains that you can do calculations while declaring a variable. so int example = 10 * (0+1)
      
Lesson 17: Integer data types
  smallest number
  biggest number of int
  difference between literall and expression 
    232323 is literal, (1 * b) is an expression
    
    byte value = -128 - 127
    if you type in a literal in an expression, then integer is the goto if you type a number, so you need to convert it?
      casting:  (byte) expression
    
    short, 32767, double the amount of space as a byte, half the amount of space than the int,
    	    /*these are the smallest and biggest numbers for int*/

        //int has a width of 32
        int myMinValue = -2147483648;
        int myMaxvalue = 2147483647;
        int myTotal = (myMinValue/2);
        System.out.println("myTotal = " + myTotal);

        //byte has a width of 8
        byte myByteValue = -128;
        byte myNewByteValue = (byte) (myByteValue/2);
        System.out.println("mynewByteValue = " + myNewByteValue);

        //short has a width of 16
        short myShortValue = 32767;
        

        //long has the width of 64
        //you can store 2 ^^ 63
        long myLongValue = 100L;
        
  had to delete all of the above to do a challenge: 
    

  lesson 18:
    float double
      numbers with decimal point
        float is single precision
          double is double precision
            double got twice as much data as the float
              double is faster one modern computers than float, double is used more often and java defaults to double, so use double, its more precise too :D:D:D:D
  Lesson 19: 
    char boolean
      char got a width of 16 bits, so 2 bytes
      unicode-table.com/en/#basic-latin
        only 1 character can be stored in a char variable
          char myChar = '\u00A9'; will show a copyright symbol! wow!
          
    boolean
      boolean myBoolean, true or false, 
      
    these are all called "primitive types" (int, byte, short,long, float, double, char, boolean)
  
  
    
  
    
    
